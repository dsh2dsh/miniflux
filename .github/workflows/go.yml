# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: go build ./

      - name: Test
        run: go test ./...

  e2e:
    needs: build
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: "postgres"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install postgresql-client
        run: sudo apt update && sudo apt install -y postgresql-client

      - name: Run E2E tests
        env:
          PGHOST: "localhost"
          PGPASSWORD: "postgres"
        run: |
          createuser -U postgres -e miniflux
          make e2e
          dropuser -U postgres -e miniflux || true

      - name: "Save e2e_api.log"
        uses: "actions/upload-artifact@v4"
        with:
          name: "e2e_api.log"
          path: "e2e_api.log"
          if-no-files-found: "ignore"
          retention-days: 1
